
O365 Floorpan

After many years in the business and benefitting from a lot public code, it is time to return some of this to the community.

This project was born out of the need to provide an online directory with a map of Offices and users locations. There are many 
commercal solutions available, some in program form, some hosted with monthly or anual fees, and some with a onetime fee for setup.

I had done something similar like that before and based on my code I came up with this solution.

The environment is an email service hosted with office365. The task is to maintain office locations in the location field of the 
user/resource/equipment of the azure active directory.

The goal is to provide a webpage with a list of all active users, email addresses, phone numbers and a location column, with the 
capability of map locaton when clicking on the location item.

The implementation was made possible by new pieces of software in the public to access o365 from a linux platform and interogate 
the directory and extract the wanted information.

A script extracts the directory listing with the desired columns. Then a few sed/awk cmds format the output into HTML form and 
write it to ahtml directory. The o365 output is further processed to extract city and suite locations and create subdirectories 
in the web root containing templates of a map display and a sample png image.

The script can be called from crontab to update the directory at certain intervals. It is assumed that the location data is not 
changing frequently and no attempt to query o365 per request is made.

The location field in the O365 user/resource/equipment has the form or CityName,Suite,Location. This was all that was needed for 
this project but could be expanded to more granularity.

The HTMl directory root is fp365 and its subdirectories are CityName/Suite. The root contains the directory etc which contains 
the update script, and sample data which is copied when new city/suite locations are detected. The var directory contains the 
data extracted from o365 and keeps a last copy to which the current is compared. If both data files are not different no new 
html files are created.

To view the directory one visits http://servername/fp365 which results in reading the autogenerated index.html.

The map files is located in http://servername/fp365/CityName/Suite/ visiting this url reads the index.html file. That directory 
contains the image.png file which should be a png representation of this particular suite. The index.htmt file contains jscript 
code to define the location to x,y cordinates. To help obtain those coordinates, the index.html contains some code to 
display x,y coordinates while moving the mouse over the map. A table contains a mapping with locaton numbers to x,y coordinates.

As long as the map does not change, the office desk locations remain the same, all that is needed to move a user is to edit the 
o365 location field to point to the proper location.

Only users with a non zero location, and only active users are extracted from O365

The code was developed on CentOS/amazon 7x as provided by amazon AWS and runs satisfactory on that platform.  There are nuances 
between different flavors of awk that may require some changes to formating awk script in MakeMap.bash

You will nodes.js and o365 and some other tools all of which are referenced in the MakeMap.bash script

I maintain Copyright to the design and implementation of this project. Permission is granted to use the code but not to sell it 
with out my written permission. You may not productize this project and sell it for profit.
